// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: youversion.red.biblecontent.api.model.youversion.ApiNodeType.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// Auto-Generated from OpenAPI Spec

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Youversion_Red_Biblecontent_Api_Model_Youversion_ApiNodeType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case unsupportedPlaceholder // = 0
  case block // = 1
  case table // = 2
  case row // = 3
  case cell // = 4
  case span // = 5
  case text // = 6
  case UNRECOGNIZED(Int)

  init() {
    self = .unsupportedPlaceholder
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unsupportedPlaceholder
    case 1: self = .block
    case 2: self = .table
    case 3: self = .row
    case 4: self = .cell
    case 5: self = .span
    case 6: self = .text
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .unsupportedPlaceholder: return 0
    case .block: return 1
    case .table: return 2
    case .row: return 3
    case .cell: return 4
    case .span: return 5
    case .text: return 6
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Youversion_Red_Biblecontent_Api_Model_Youversion_ApiNodeType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static let allCases: [Youversion_Red_Biblecontent_Api_Model_Youversion_ApiNodeType] = [
    .unsupportedPlaceholder,
    .block,
    .table,
    .row,
    .cell,
    .span,
    .text,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Youversion_Red_Biblecontent_Api_Model_Youversion_ApiNodeType: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Youversion_Red_Biblecontent_Api_Model_Youversion_ApiNodeType: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSUPPORTED_PLACEHOLDER"),
    1: .same(proto: "BLOCK"),
    2: .same(proto: "TABLE"),
    3: .same(proto: "ROW"),
    4: .same(proto: "CELL"),
    5: .same(proto: "SPAN"),
    6: .same(proto: "TEXT"),
  ]
}
