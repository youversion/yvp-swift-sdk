// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: youversion.red.movies.api.model.common.UtmContent.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// Auto-Generated from OpenAPI Spec

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Youversion_Red_Movies_Api_Model_Common_UtmContent: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case unsupportedPlaceholder // = 0
  case verse // = 1
  case image // = 2
  case plan // = 3
  case planDay // = 4
  case planCollection // = 5
  case podcast // = 6
  case video // = 7
  case videoCollection // = 8
  case teachingClip // = 9
  case storyClip // = 10
  case UNRECOGNIZED(Int)

  init() {
    self = .unsupportedPlaceholder
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unsupportedPlaceholder
    case 1: self = .verse
    case 2: self = .image
    case 3: self = .plan
    case 4: self = .planDay
    case 5: self = .planCollection
    case 6: self = .podcast
    case 7: self = .video
    case 8: self = .videoCollection
    case 9: self = .teachingClip
    case 10: self = .storyClip
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .unsupportedPlaceholder: return 0
    case .verse: return 1
    case .image: return 2
    case .plan: return 3
    case .planDay: return 4
    case .planCollection: return 5
    case .podcast: return 6
    case .video: return 7
    case .videoCollection: return 8
    case .teachingClip: return 9
    case .storyClip: return 10
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Youversion_Red_Movies_Api_Model_Common_UtmContent: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static let allCases: [Youversion_Red_Movies_Api_Model_Common_UtmContent] = [
    .unsupportedPlaceholder,
    .verse,
    .image,
    .plan,
    .planDay,
    .planCollection,
    .podcast,
    .video,
    .videoCollection,
    .teachingClip,
    .storyClip,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Youversion_Red_Movies_Api_Model_Common_UtmContent: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Youversion_Red_Movies_Api_Model_Common_UtmContent: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UTM_CONTENT_UNSUPPORTED_PLACEHOLDER"),
    1: .same(proto: "VERSE"),
    2: .same(proto: "IMAGE"),
    3: .same(proto: "PLAN"),
    4: .same(proto: "PLAN_DAY"),
    5: .same(proto: "PLAN_COLLECTION"),
    6: .same(proto: "UTM_CONTENT_PODCAST"),
    7: .same(proto: "VIDEO"),
    8: .same(proto: "VIDEO_COLLECTION"),
    9: .same(proto: "TEACHING_CLIP"),
    10: .same(proto: "STORY_CLIP"),
  ]
}
